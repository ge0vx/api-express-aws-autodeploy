{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Seans-TypeScript-NodeJS-CRUD-REST-API-Boilerplate",
        "description": "A minimal and easy to follow example of what you need to create a CRUD style API in NodeJs using TypeScript",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "http://localhost:5000/api/",
            "description": "Local Dev"
        },
        {
            "url": "http://3.101.141.231/api/",
            "description": "Prod AWS ec2 instance with nginx proxy"
        }
    ],
    "tags": [
        {
            "name": "Spotify Tracks",
            "description": "API searches and saves Spotify Tracks"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/searchByTitle/{trackTitle}": {
            "get": {
                "tags": [
                    "Retrieve spotify tracks from spotify API"
                ],
                "summary": "Get track with given Title",
                "parameters": [
                    {
                        "in": "path",
                        "name": "trackTitle",
                        "required": true,
                        "description": "Track title"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Track not found."
                    }
                }
            }
        },
        "/searchById/{trackId}": {
            "get": {
                "tags": [
                    "Retrieve spotify tracks from spotify API"
                ],
                "summary": "Get track with given track id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "trackId",
                        "required": true,
                        "description": "Track title"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Track not found."
                    }
                }
            }
        },
        "/track": {
            "post": {
                "tags": [
                    "Retrieve data from System DB"
                ],
                "summary": "Create a new track in system",
                "requestBody": {
                    "description": "Track Id",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/id"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            },
            "get": {
                "tags": [
                    "Retrieve data from System DB"
                ],
                "summary": "List saved tracks from system",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Track not found."
                    }
                }
            }
        },
        "/track/{id}": {
            "get": {
                "tags": [
                    "Retrieve data from System DB"
                ],
                "summary": "Get saved tracks by id",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Track Id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Track not found."
                    }
                }
            }
        },
        "/tracksByArtist/{artist}": {
            "get": {
                "tags": [
                    "Retrieve data from System DB"
                ],
                "summary": "Get saved tracks by artist name",
                "parameters": [
                    {
                        "in": "path",
                        "name": "artist",
                        "required": true,
                        "description": "Artist Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Failed. Track not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        }
    }
}
